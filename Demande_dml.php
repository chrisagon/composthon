<?php

// Data functions (insert, update, delete, form) for table Demande

// This script and data application were generated by AppGini 5.75
// Download AppGini for free from https://bigprof.com/appgini/download/

function Demande_insert(){
	global $Translation;

	// mm: can member insert record?
	$arrPerm=getTablePermissions('Demande');
	if(!$arrPerm[1]){
		return false;
	}

	$data['type'] = makeSafe($_REQUEST['type']);
		if($data['type'] == empty_lookup_value){ $data['type'] = ''; }
	$data['intervention'] = makeSafe($_REQUEST['intervention']);
		if($data['intervention'] == empty_lookup_value){ $data['intervention'] = ''; }
	$data['site_compostage'] = makeSafe($_REQUEST['site_compostage']);
		if($data['site_compostage'] == empty_lookup_value){ $data['site_compostage'] = ''; }
	$data['site_dechet'] = makeSafe($_REQUEST['site_dechet']);
		if($data['site_dechet'] == empty_lookup_value){ $data['site_dechet'] = ''; }
	$data['desc'] = br2nl(makeSafe($_REQUEST['desc']));
	$data['date_lancement'] = intval($_REQUEST['date_lancementYear']) . '-' . intval($_REQUEST['date_lancementMonth']) . '-' . intval($_REQUEST['date_lancementDay']);
	$data['date_lancement'] = parseMySQLDate($data['date_lancement'], '');
	$data['date_butoir'] = intval($_REQUEST['date_butoirYear']) . '-' . intval($_REQUEST['date_butoirMonth']) . '-' . intval($_REQUEST['date_butoirDay']);
	$data['date_butoir'] = parseMySQLDate($data['date_butoir'], '');
	$data['date_inter'] = intval($_REQUEST['date_interYear']) . '-' . intval($_REQUEST['date_interMonth']) . '-' . intval($_REQUEST['date_interDay']);
	$data['date_inter'] = parseMySQLDate($data['date_inter'], '');
	$data['intervenant'] = makeSafe($_REQUEST['intervenant']);
		if($data['intervenant'] == empty_lookup_value){ $data['intervenant'] = ''; }
	$data['prix_unit'] = makeSafe($_REQUEST['prix_unit']);
		if($data['prix_unit'] == empty_lookup_value){ $data['prix_unit'] = ''; }
	$data['niveau'] = makeSafe($_REQUEST['niveau']);
		if($data['niveau'] == empty_lookup_value){ $data['niveau'] = ''; }
	$data['etat'] = makeSafe($_REQUEST['etat']);
		if($data['etat'] == empty_lookup_value){ $data['etat'] = ''; }
	if($data['type']== ''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">" . $Translation['error:'] . " 'Type de demande': " . $Translation['field not null'] . '<br><br>';
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}

	// hook: Demande_before_insert
	if(function_exists('Demande_before_insert')){
		$args=array();
		if(!Demande_before_insert($data, getMemberInfo(), $args)){ return false; }
	}

	$o = array('silentErrors' => true);
	sql('insert into `Demande` set       `type`=' . (($data['type'] !== '' && $data['type'] !== NULL) ? "'{$data['type']}'" : 'NULL') . ', `intervention`=' . (($data['intervention'] !== '' && $data['intervention'] !== NULL) ? "'{$data['intervention']}'" : 'NULL') . ', `site_compostage`=' . (($data['site_compostage'] !== '' && $data['site_compostage'] !== NULL) ? "'{$data['site_compostage']}'" : 'NULL') . ', `site_dechet`=' . (($data['site_dechet'] !== '' && $data['site_dechet'] !== NULL) ? "'{$data['site_dechet']}'" : 'NULL') . ', `desc`=' . (($data['desc'] !== '' && $data['desc'] !== NULL) ? "'{$data['desc']}'" : 'NULL') . ', `date_lancement`=' . (($data['date_lancement'] !== '' && $data['date_lancement'] !== NULL) ? "'{$data['date_lancement']}'" : 'NULL') . ', `date_butoir`=' . (($data['date_butoir'] !== '' && $data['date_butoir'] !== NULL) ? "'{$data['date_butoir']}'" : 'NULL') . ', `date_inter`=' . (($data['date_inter'] !== '' && $data['date_inter'] !== NULL) ? "'{$data['date_inter']}'" : 'NULL') . ', `intervenant`=' . (($data['intervenant'] !== '' && $data['intervenant'] !== NULL) ? "'{$data['intervenant']}'" : 'NULL') . ', `prix_unit`=' . (($data['prix_unit'] !== '' && $data['prix_unit'] !== NULL) ? "'{$data['prix_unit']}'" : 'NULL') . ', `niveau`=' . (($data['niveau'] !== '' && $data['niveau'] !== NULL) ? "'{$data['niveau']}'" : 'NULL') . ', `etat`=' . (($data['etat'] !== '' && $data['etat'] !== NULL) ? "'{$data['etat']}'" : 'NULL'), $o);
	if($o['error']!=''){
		echo $o['error'];
		echo "<a href=\"Demande_view.php?addNew_x=1\">{$Translation['< back']}</a>";
		exit;
	}

	$recID = db_insert_id(db_link());

	// hook: Demande_after_insert
	if(function_exists('Demande_after_insert')){
		$res = sql("select * from `Demande` where `id`='" . makeSafe($recID, false) . "' limit 1", $eo);
		if($row = db_fetch_assoc($res)){
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = makeSafe($recID, false);
		$args=array();
		if(!Demande_after_insert($data, getMemberInfo(), $args)){ return $recID; }
	}

	// mm: save ownership data
	set_record_owner('Demande', $recID, getLoggedMemberID());

	return $recID;
}

function Demande_delete($selected_id, $AllowDeleteOfParents=false, $skipChecks=false){
	// insure referential integrity ...
	global $Translation;
	$selected_id=makeSafe($selected_id);

	// mm: can member delete record?
	$arrPerm=getTablePermissions('Demande');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='Demande' and pkValue='$selected_id'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='Demande' and pkValue='$selected_id'");
	if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3){ // allow delete?
		// delete allowed, so continue ...
	}else{
		return $Translation['You don\'t have enough permissions to delete this record'];
	}

	// hook: Demande_before_delete
	if(function_exists('Demande_before_delete')){
		$args=array();
		if(!Demande_before_delete($selected_id, $skipChecks, getMemberInfo(), $args))
			return $Translation['Couldn\'t delete this record'];
	}

	sql("delete from `Demande` where `id`='$selected_id'", $eo);

	// hook: Demande_after_delete
	if(function_exists('Demande_after_delete')){
		$args=array();
		Demande_after_delete($selected_id, getMemberInfo(), $args);
	}

	// mm: delete ownership data
	sql("delete from membership_userrecords where tableName='Demande' and pkValue='$selected_id'", $eo);
}

function Demande_update($selected_id){
	global $Translation;

	// mm: can member edit record?
	$arrPerm=getTablePermissions('Demande');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='Demande' and pkValue='".makeSafe($selected_id)."'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='Demande' and pkValue='".makeSafe($selected_id)."'");
	if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3){ // allow update?
		// update allowed, so continue ...
	}else{
		return false;
	}

	$data['type'] = makeSafe($_REQUEST['type']);
		if($data['type'] == empty_lookup_value){ $data['type'] = ''; }
	if($data['type']==''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Type de demande': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	$data['intervention'] = makeSafe($_REQUEST['intervention']);
		if($data['intervention'] == empty_lookup_value){ $data['intervention'] = ''; }
	$data['site_compostage'] = makeSafe($_REQUEST['site_compostage']);
		if($data['site_compostage'] == empty_lookup_value){ $data['site_compostage'] = ''; }
	$data['site_dechet'] = makeSafe($_REQUEST['site_dechet']);
		if($data['site_dechet'] == empty_lookup_value){ $data['site_dechet'] = ''; }
	$data['desc'] = br2nl(makeSafe($_REQUEST['desc']));
	$data['date_lancement'] = intval($_REQUEST['date_lancementYear']) . '-' . intval($_REQUEST['date_lancementMonth']) . '-' . intval($_REQUEST['date_lancementDay']);
	$data['date_lancement'] = parseMySQLDate($data['date_lancement'], '');
	$data['date_butoir'] = intval($_REQUEST['date_butoirYear']) . '-' . intval($_REQUEST['date_butoirMonth']) . '-' . intval($_REQUEST['date_butoirDay']);
	$data['date_butoir'] = parseMySQLDate($data['date_butoir'], '');
	$data['date_inter'] = intval($_REQUEST['date_interYear']) . '-' . intval($_REQUEST['date_interMonth']) . '-' . intval($_REQUEST['date_interDay']);
	$data['date_inter'] = parseMySQLDate($data['date_inter'], '');
	$data['intervenant'] = makeSafe($_REQUEST['intervenant']);
		if($data['intervenant'] == empty_lookup_value){ $data['intervenant'] = ''; }
	$data['prix_unit'] = makeSafe($_REQUEST['prix_unit']);
		if($data['prix_unit'] == empty_lookup_value){ $data['prix_unit'] = ''; }
	$data['niveau'] = makeSafe($_REQUEST['niveau']);
		if($data['niveau'] == empty_lookup_value){ $data['niveau'] = ''; }
	$data['etat'] = makeSafe($_REQUEST['etat']);
		if($data['etat'] == empty_lookup_value){ $data['etat'] = ''; }
	$data['selectedID']=makeSafe($selected_id);

	// hook: Demande_before_update
	if(function_exists('Demande_before_update')){
		$args=array();
		if(!Demande_before_update($data, getMemberInfo(), $args)){ return false; }
	}

	$o=array('silentErrors' => true);
	sql('update `Demande` set       `type`=' . (($data['type'] !== '' && $data['type'] !== NULL) ? "'{$data['type']}'" : 'NULL') . ', `intervention`=' . (($data['intervention'] !== '' && $data['intervention'] !== NULL) ? "'{$data['intervention']}'" : 'NULL') . ', `site_compostage`=' . (($data['site_compostage'] !== '' && $data['site_compostage'] !== NULL) ? "'{$data['site_compostage']}'" : 'NULL') . ', `site_dechet`=' . (($data['site_dechet'] !== '' && $data['site_dechet'] !== NULL) ? "'{$data['site_dechet']}'" : 'NULL') . ', `desc`=' . (($data['desc'] !== '' && $data['desc'] !== NULL) ? "'{$data['desc']}'" : 'NULL') . ', `date_lancement`=' . (($data['date_lancement'] !== '' && $data['date_lancement'] !== NULL) ? "'{$data['date_lancement']}'" : 'NULL') . ', `date_butoir`=' . (($data['date_butoir'] !== '' && $data['date_butoir'] !== NULL) ? "'{$data['date_butoir']}'" : 'NULL') . ', `date_inter`=' . (($data['date_inter'] !== '' && $data['date_inter'] !== NULL) ? "'{$data['date_inter']}'" : 'NULL') . ', `intervenant`=' . (($data['intervenant'] !== '' && $data['intervenant'] !== NULL) ? "'{$data['intervenant']}'" : 'NULL') . ', `prix_unit`=' . (($data['prix_unit'] !== '' && $data['prix_unit'] !== NULL) ? "'{$data['prix_unit']}'" : 'NULL') . ', `niveau`=' . (($data['niveau'] !== '' && $data['niveau'] !== NULL) ? "'{$data['niveau']}'" : 'NULL') . ', `etat`=' . (($data['etat'] !== '' && $data['etat'] !== NULL) ? "'{$data['etat']}'" : 'NULL') . " where `id`='".makeSafe($selected_id)."'", $o);
	if($o['error']!=''){
		echo $o['error'];
		echo '<a href="Demande_view.php?SelectedID='.urlencode($selected_id)."\">{$Translation['< back']}</a>";
		exit;
	}


	// hook: Demande_after_update
	if(function_exists('Demande_after_update')){
		$res = sql("SELECT * FROM `Demande` WHERE `id`='{$data['selectedID']}' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)){
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = $data['id'];
		$args = array();
		if(!Demande_after_update($data, getMemberInfo(), $args)){ return; }
	}

	// mm: update ownership data
	sql("update membership_userrecords set dateUpdated='".time()."' where tableName='Demande' and pkValue='".makeSafe($selected_id)."'", $eo);

}

function Demande_form($selected_id = '', $AllowUpdate = 1, $AllowInsert = 1, $AllowDelete = 1, $ShowCancel = 0, $TemplateDV = '', $TemplateDVP = ''){
	// function to return an editable form for a table records
	// and fill it with data of record whose ID is $selected_id. If $selected_id
	// is empty, an empty form is shown, with only an 'Add New'
	// button displayed.

	global $Translation;

	// mm: get table permissions
	$arrPerm=getTablePermissions('Demande');
	if(!$arrPerm[1] && $selected_id==''){ return ''; }
	$AllowInsert = ($arrPerm[1] ? true : false);
	// print preview?
	$dvprint = false;
	if($selected_id && $_REQUEST['dvprint_x'] != ''){
		$dvprint = true;
	}

	$filterer_site_compostage = thisOr(undo_magic_quotes($_REQUEST['filterer_site_compostage']), '');
	$filterer_site_dechet = thisOr(undo_magic_quotes($_REQUEST['filterer_site_dechet']), '');

	// populate filterers, starting from children to grand-parents

	// unique random identifier
	$rnd1 = ($dvprint ? rand(1000000, 9999999) : '');
	// combobox: type
	$combo_type = new Combo;
	$combo_type->ListType = 0;
	$combo_type->MultipleSeparator = ', ';
	$combo_type->ListBoxHeight = 10;
	$combo_type->RadiosPerLine = 1;
	if(is_file(dirname(__FILE__).'/hooks/Demande.type.csv')){
		$type_data = addslashes(implode('', @file(dirname(__FILE__).'/hooks/Demande.type.csv')));
		$combo_type->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions($type_data)));
		$combo_type->ListData = $combo_type->ListItem;
	}else{
		$combo_type->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions("Alerte;;Intervention")));
		$combo_type->ListData = $combo_type->ListItem;
	}
	$combo_type->SelectName = 'type';
	$combo_type->AllowNull = false;
	// combobox: intervention
	$combo_intervention = new Combo;
	$combo_intervention->ListType = 0;
	$combo_intervention->MultipleSeparator = ', ';
	$combo_intervention->ListBoxHeight = 10;
	$combo_intervention->RadiosPerLine = 1;
	if(is_file(dirname(__FILE__).'/hooks/Demande.intervention.csv')){
		$intervention_data = addslashes(implode('', @file(dirname(__FILE__).'/hooks/Demande.intervention.csv')));
		$combo_intervention->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions($intervention_data)));
		$combo_intervention->ListData = $combo_intervention->ListItem;
	}else{
		$combo_intervention->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions("Brassage interm&#233;diaire;;Contr&#244;le du compost;;Correction &#233;quilibre;;Correction humidit&#233;;;Maintenance Mat&#233;riel;;Initialisation du site;;Rechargement Broyat;;R&#233;colte;;Retournement complet de cellule;;Tamisage")));
		$combo_intervention->ListData = $combo_intervention->ListItem;
	}
	$combo_intervention->SelectName = 'intervention';
	// combobox: site_compostage
	$combo_site_compostage = new DataCombo;
	// combobox: site_dechet
	$combo_site_dechet = new DataCombo;
	// combobox: date_lancement
	$combo_date_lancement = new DateCombo;
	$combo_date_lancement->DateFormat = "dmy";
	$combo_date_lancement->MinYear = 1900;
	$combo_date_lancement->MaxYear = 2100;
	$combo_date_lancement->DefaultDate = parseMySQLDate('', '');
	$combo_date_lancement->MonthNames = $Translation['month names'];
	$combo_date_lancement->NamePrefix = 'date_lancement';
	// combobox: date_butoir
	$combo_date_butoir = new DateCombo;
	$combo_date_butoir->DateFormat = "dmy";
	$combo_date_butoir->MinYear = 1900;
	$combo_date_butoir->MaxYear = 2100;
	$combo_date_butoir->DefaultDate = parseMySQLDate('', '');
	$combo_date_butoir->MonthNames = $Translation['month names'];
	$combo_date_butoir->NamePrefix = 'date_butoir';
	// combobox: date_inter
	$combo_date_inter = new DateCombo;
	$combo_date_inter->DateFormat = "dmy";
	$combo_date_inter->MinYear = 1900;
	$combo_date_inter->MaxYear = 2100;
	$combo_date_inter->DefaultDate = parseMySQLDate('', '');
	$combo_date_inter->MonthNames = $Translation['month names'];
	$combo_date_inter->NamePrefix = 'date_inter';
	// combobox: niveau
	$combo_niveau = new Combo;
	$combo_niveau->ListType = 0;
	$combo_niveau->MultipleSeparator = ', ';
	$combo_niveau->ListBoxHeight = 10;
	$combo_niveau->RadiosPerLine = 1;
	if(is_file(dirname(__FILE__).'/hooks/Demande.niveau.csv')){
		$niveau_data = addslashes(implode('', @file(dirname(__FILE__).'/hooks/Demande.niveau.csv')));
		$combo_niveau->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions($niveau_data)));
		$combo_niveau->ListData = $combo_niveau->ListItem;
	}else{
		$combo_niveau->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions("Grave (dans la journ&#233;e);;G&#234;nant (dans le mois);;Sans urgence (lors d'un passage);;")));
		$combo_niveau->ListData = $combo_niveau->ListItem;
	}
	$combo_niveau->SelectName = 'niveau';

	if($selected_id){
		// mm: check member permissions
		if(!$arrPerm[2]){
			return "";
		}
		// mm: who is the owner?
		$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='Demande' and pkValue='".makeSafe($selected_id)."'");
		$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='Demande' and pkValue='".makeSafe($selected_id)."'");
		if($arrPerm[2]==1 && getLoggedMemberID()!=$ownerMemberID){
			return "";
		}
		if($arrPerm[2]==2 && getLoggedGroupID()!=$ownerGroupID){
			return "";
		}

		// can edit?
		if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3){
			$AllowUpdate=1;
		}else{
			$AllowUpdate=0;
		}

		$res = sql("select * from `Demande` where `id`='".makeSafe($selected_id)."'", $eo);
		if(!($row = db_fetch_array($res))){
			return error_message($Translation['No records found'], 'Demande_view.php', false);
		}
		$urow = $row; /* unsanitized data */
		$hc = new CI_Input();
		$row = $hc->xss_clean($row); /* sanitize data */
		$combo_type->SelectedData = $row['type'];
		$combo_intervention->SelectedData = $row['intervention'];
		$combo_site_compostage->SelectedData = $row['site_compostage'];
		$combo_site_dechet->SelectedData = $row['site_dechet'];
		$combo_date_lancement->DefaultDate = $row['date_lancement'];
		$combo_date_butoir->DefaultDate = $row['date_butoir'];
		$combo_date_inter->DefaultDate = $row['date_inter'];
		$combo_niveau->SelectedData = $row['niveau'];
	}else{
		$combo_type->SelectedText = ( $_REQUEST['FilterField'][1]=='2' && $_REQUEST['FilterOperator'][1]=='<=>' ? (get_magic_quotes_gpc() ? stripslashes($_REQUEST['FilterValue'][1]) : $_REQUEST['FilterValue'][1]) : "");
		$combo_intervention->SelectedText = ( $_REQUEST['FilterField'][1]=='3' && $_REQUEST['FilterOperator'][1]=='<=>' ? (get_magic_quotes_gpc() ? stripslashes($_REQUEST['FilterValue'][1]) : $_REQUEST['FilterValue'][1]) : "");
		$combo_site_compostage->SelectedData = $filterer_site_compostage;
		$combo_site_dechet->SelectedData = $filterer_site_dechet;
		$combo_niveau->SelectedText = ( $_REQUEST['FilterField'][1]=='12' && $_REQUEST['FilterOperator'][1]=='<=>' ? (get_magic_quotes_gpc() ? stripslashes($_REQUEST['FilterValue'][1]) : $_REQUEST['FilterValue'][1]) : "");
	}
	$combo_type->Render();
	$combo_intervention->Render();
	$combo_site_compostage->HTML = '<span id="site_compostage-container' . $rnd1 . '"></span><input type="hidden" name="site_compostage" id="site_compostage' . $rnd1 . '" value="' . html_attr($combo_site_compostage->SelectedData) . '">';
	$combo_site_compostage->MatchText = '<span id="site_compostage-container-readonly' . $rnd1 . '"></span><input type="hidden" name="site_compostage" id="site_compostage' . $rnd1 . '" value="' . html_attr($combo_site_compostage->SelectedData) . '">';
	$combo_site_dechet->HTML = '<span id="site_dechet-container' . $rnd1 . '"></span><input type="hidden" name="site_dechet" id="site_dechet' . $rnd1 . '" value="' . html_attr($combo_site_dechet->SelectedData) . '">';
	$combo_site_dechet->MatchText = '<span id="site_dechet-container-readonly' . $rnd1 . '"></span><input type="hidden" name="site_dechet" id="site_dechet' . $rnd1 . '" value="' . html_attr($combo_site_dechet->SelectedData) . '">';
	$combo_niveau->Render();

	ob_start();
	?>

	<script>
		// initial lookup values
		AppGini.current_site_compostage__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['site_compostage'] : $filterer_site_compostage); ?>"};
		AppGini.current_site_dechet__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['site_dechet'] : $filterer_site_dechet); ?>"};

		jQuery(function() {
			setTimeout(function(){
				if(typeof(site_compostage_reload__RAND__) == 'function') site_compostage_reload__RAND__();
				if(typeof(site_dechet_reload__RAND__) == 'function') site_dechet_reload__RAND__();
			}, 10); /* we need to slightly delay client-side execution of the above code to allow AppGini.ajaxCache to work */
		});
		function site_compostage_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#site_compostage-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_site_compostage__RAND__.value, t: 'Demande', f: 'site_compostage' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="site_compostage"]').val(resp.results[0].id);
							$j('[id=site_compostage-container-readonly__RAND__]').html('<span id="site_compostage-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=Sites_view_parent]').hide(); }else{ $j('.btn[id=Sites_view_parent]').show(); }


							if(typeof(site_compostage_update_autofills__RAND__) == 'function') site_compostage_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term){ /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ /* */ return { s: term, p: page, t: 'Demande', f: 'site_compostage' }; },
					results: function(resp, page){ /* */ return resp; }
				},
				escapeMarkup: function(str){ /* */ return str; }
			}).on('change', function(e){
				AppGini.current_site_compostage__RAND__.value = e.added.id;
				AppGini.current_site_compostage__RAND__.text = e.added.text;
				$j('[name="site_compostage"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=Sites_view_parent]').hide(); }else{ $j('.btn[id=Sites_view_parent]').show(); }


				if(typeof(site_compostage_update_autofills__RAND__) == 'function') site_compostage_update_autofills__RAND__();
			});

			if(!$j("#site_compostage-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_site_compostage__RAND__.value, t: 'Demande', f: 'site_compostage' },
					success: function(resp){
						$j('[name="site_compostage"]').val(resp.results[0].id);
						$j('[id=site_compostage-container-readonly__RAND__]').html('<span id="site_compostage-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=Sites_view_parent]').hide(); }else{ $j('.btn[id=Sites_view_parent]').show(); }

						if(typeof(site_compostage_update_autofills__RAND__) == 'function') site_compostage_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_site_compostage__RAND__.value, t: 'Demande', f: 'site_compostage' },
				success: function(resp){
					$j('[id=site_compostage-container__RAND__], [id=site_compostage-container-readonly__RAND__]').html('<span id="site_compostage-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=Sites_view_parent]').hide(); }else{ $j('.btn[id=Sites_view_parent]').show(); }

					if(typeof(site_compostage_update_autofills__RAND__) == 'function') site_compostage_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function site_dechet_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#site_dechet-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_site_dechet__RAND__.value, t: 'Demande', f: 'site_dechet' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="site_dechet"]').val(resp.results[0].id);
							$j('[id=site_dechet-container-readonly__RAND__]').html('<span id="site_dechet-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=Sites_view_parent]').hide(); }else{ $j('.btn[id=Sites_view_parent]').show(); }


							if(typeof(site_dechet_update_autofills__RAND__) == 'function') site_dechet_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term){ /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ /* */ return { s: term, p: page, t: 'Demande', f: 'site_dechet' }; },
					results: function(resp, page){ /* */ return resp; }
				},
				escapeMarkup: function(str){ /* */ return str; }
			}).on('change', function(e){
				AppGini.current_site_dechet__RAND__.value = e.added.id;
				AppGini.current_site_dechet__RAND__.text = e.added.text;
				$j('[name="site_dechet"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=Sites_view_parent]').hide(); }else{ $j('.btn[id=Sites_view_parent]').show(); }


				if(typeof(site_dechet_update_autofills__RAND__) == 'function') site_dechet_update_autofills__RAND__();
			});

			if(!$j("#site_dechet-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_site_dechet__RAND__.value, t: 'Demande', f: 'site_dechet' },
					success: function(resp){
						$j('[name="site_dechet"]').val(resp.results[0].id);
						$j('[id=site_dechet-container-readonly__RAND__]').html('<span id="site_dechet-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=Sites_view_parent]').hide(); }else{ $j('.btn[id=Sites_view_parent]').show(); }

						if(typeof(site_dechet_update_autofills__RAND__) == 'function') site_dechet_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_site_dechet__RAND__.value, t: 'Demande', f: 'site_dechet' },
				success: function(resp){
					$j('[id=site_dechet-container__RAND__], [id=site_dechet-container-readonly__RAND__]').html('<span id="site_dechet-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=Sites_view_parent]').hide(); }else{ $j('.btn[id=Sites_view_parent]').show(); }

					if(typeof(site_dechet_update_autofills__RAND__) == 'function') site_dechet_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
	</script>
	<?php

	$lookups = str_replace('__RAND__', $rnd1, ob_get_contents());
	ob_end_clean();


	// code for template based detail view forms

	// open the detail view template
	if($dvprint){
		$template_file = is_file("./{$TemplateDVP}") ? "./{$TemplateDVP}" : './templates/Demande_templateDVP.html';
		$templateCode = @file_get_contents($template_file);
	}else{
		$template_file = is_file("./{$TemplateDV}") ? "./{$TemplateDV}" : './templates/Demande_templateDV.html';
		$templateCode = @file_get_contents($template_file);
	}

	// process form title
	$templateCode = str_replace('<%%DETAIL_VIEW_TITLE%%>', 'Demande details', $templateCode);
	$templateCode = str_replace('<%%RND1%%>', $rnd1, $templateCode);
	$templateCode = str_replace('<%%EMBEDDED%%>', ($_REQUEST['Embedded'] ? 'Embedded=1' : ''), $templateCode);
	// process buttons
	if($AllowInsert){
		if(!$selected_id) $templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-success" id="insert" name="insert_x" value="1" onclick="return Demande_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save New'] . '</button>', $templateCode);
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="insert" name="insert_x" value="1" onclick="return Demande_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save As Copy'] . '</button>', $templateCode);
	}else{
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '', $templateCode);
	}

	// 'Back' button action
	if($_REQUEST['Embedded']){
		$backAction = 'AppGini.closeParentModal(); return false;';
	}else{
		$backAction = '$j(\'form\').eq(0).attr(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;';
	}

	if($selected_id){
		if(!$_REQUEST['Embedded']) $templateCode = str_replace('<%%DVPRINT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="dvprint" name="dvprint_x" value="1" onclick="$j(\'form\').eq(0).prop(\'novalidate\', true); document.myform.reset(); return true;" title="' . html_attr($Translation['Print Preview']) . '"><i class="glyphicon glyphicon-print"></i> ' . $Translation['Print Preview'] . '</button>', $templateCode);
		if($AllowUpdate){
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '<button type="submit" class="btn btn-success btn-lg" id="update" name="update_x" value="1" onclick="return Demande_validateData();" title="' . html_attr($Translation['Save Changes']) . '"><i class="glyphicon glyphicon-ok"></i> ' . $Translation['Save Changes'] . '</button>', $templateCode);
		}else{
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		}
		if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3){ // allow delete?
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '<button type="submit" class="btn btn-danger" id="delete" name="delete_x" value="1" onclick="return confirm(\'' . $Translation['are you sure?'] . '\');" title="' . html_attr($Translation['Delete']) . '"><i class="glyphicon glyphicon-trash"></i> ' . $Translation['Delete'] . '</button>', $templateCode);
		}else{
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		}
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>', $templateCode);
	}else{
		$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', ($ShowCancel ? '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>' : ''), $templateCode);
	}

	// set records to read only if user can't insert new records and can't edit current record
	if(($selected_id && !$AllowUpdate && !$AllowInsert) || (!$selected_id && !$AllowInsert)){
		$jsReadOnly .= "\tjQuery('#type').replaceWith('<div class=\"form-control-static\" id=\"type\">' + (jQuery('#type').val() || '') + '</div>'); jQuery('#type-multi-selection-help').hide();\n";
		$jsReadOnly .= "\tjQuery('#intervention').replaceWith('<div class=\"form-control-static\" id=\"intervention\">' + (jQuery('#intervention').val() || '') + '</div>'); jQuery('#intervention-multi-selection-help').hide();\n";
		$jsReadOnly .= "\tjQuery('#site_compostage').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#site_compostage_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#site_dechet').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#site_dechet_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#desc').replaceWith('<div class=\"form-control-static\" id=\"desc\">' + (jQuery('#desc').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#date_lancement').prop('readonly', true);\n";
		$jsReadOnly .= "\tjQuery('#date_lancementDay, #date_lancementMonth, #date_lancementYear').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#date_butoir').prop('readonly', true);\n";
		$jsReadOnly .= "\tjQuery('#date_butoirDay, #date_butoirMonth, #date_butoirYear').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#date_inter').prop('readonly', true);\n";
		$jsReadOnly .= "\tjQuery('#date_interDay, #date_interMonth, #date_interYear').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#intervenant').replaceWith('<div class=\"form-control-static\" id=\"intervenant\">' + (jQuery('#intervenant').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#prix_unit').replaceWith('<div class=\"form-control-static\" id=\"prix_unit\">' + (jQuery('#prix_unit').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#niveau').replaceWith('<div class=\"form-control-static\" id=\"niveau\">' + (jQuery('#niveau').val() || '') + '</div>'); jQuery('#niveau-multi-selection-help').hide();\n";
		$jsReadOnly .= "\tjQuery('#etat').replaceWith('<div class=\"form-control-static\" id=\"etat\">' + (jQuery('#etat').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('.select2-container').hide();\n";

		$noUploads = true;
	}elseif($AllowInsert){
		$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', true);"; // temporarily disable form change handler
			$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', false);"; // re-enable form change handler
	}

	// process combos
	$templateCode = str_replace('<%%COMBO(type)%%>', $combo_type->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(type)%%>', $combo_type->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(intervention)%%>', $combo_intervention->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(intervention)%%>', $combo_intervention->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(site_compostage)%%>', $combo_site_compostage->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(site_compostage)%%>', $combo_site_compostage->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(site_compostage)%%>', urlencode($combo_site_compostage->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(site_dechet)%%>', $combo_site_dechet->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(site_dechet)%%>', $combo_site_dechet->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(site_dechet)%%>', urlencode($combo_site_dechet->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(date_lancement)%%>', ($selected_id && !$arrPerm[3] ? '<div class="form-control-static">' . $combo_date_lancement->GetHTML(true) . '</div>' : $combo_date_lancement->GetHTML()), $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(date_lancement)%%>', $combo_date_lancement->GetHTML(true), $templateCode);
	$templateCode = str_replace('<%%COMBO(date_butoir)%%>', ($selected_id && !$arrPerm[3] ? '<div class="form-control-static">' . $combo_date_butoir->GetHTML(true) . '</div>' : $combo_date_butoir->GetHTML()), $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(date_butoir)%%>', $combo_date_butoir->GetHTML(true), $templateCode);
	$templateCode = str_replace('<%%COMBO(date_inter)%%>', ($selected_id && !$arrPerm[3] ? '<div class="form-control-static">' . $combo_date_inter->GetHTML(true) . '</div>' : $combo_date_inter->GetHTML()), $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(date_inter)%%>', $combo_date_inter->GetHTML(true), $templateCode);
	$templateCode = str_replace('<%%COMBO(niveau)%%>', $combo_niveau->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(niveau)%%>', $combo_niveau->SelectedData, $templateCode);

	/* lookup fields array: 'lookup field name' => array('parent table name', 'lookup field caption') */
	$lookup_fields = array(  'site_compostage' => array('Sites', 'Site de compostage'), 'site_dechet' => array('Sites', 'Site de dechet'));
	foreach($lookup_fields as $luf => $ptfc){
		$pt_perm = getTablePermissions($ptfc[0]);

		// process foreign key links
		if($pt_perm['view'] || $pt_perm['edit']){
			$templateCode = str_replace("<%%PLINK({$luf})%%>", '<button type="button" class="btn btn-default view_parent hspacer-md" id="' . $ptfc[0] . '_view_parent" title="' . html_attr($Translation['View'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-eye-open"></i></button>', $templateCode);
		}

		// if user has insert permission to parent table of a lookup field, put an add new button
		if($pt_perm['insert'] && !$_REQUEST['Embedded']){
			$templateCode = str_replace("<%%ADDNEW({$ptfc[0]})%%>", '<button type="button" class="btn btn-success add_new_parent hspacer-md" id="' . $ptfc[0] . '_add_new" title="' . html_attr($Translation['Add New'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-plus-sign"></i></button>', $templateCode);
		}
	}

	// process images
	$templateCode = str_replace('<%%UPLOADFILE(id)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(type)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(intervention)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(site_compostage)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(site_dechet)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(desc)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(date_lancement)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(date_butoir)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(date_inter)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(intervenant)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(prix_unit)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(niveau)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(etat)%%>', '', $templateCode);

	// process values
	if($selected_id){
		if( $dvprint) $templateCode = str_replace('<%%VALUE(id)%%>', safe_html($urow['id']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(id)%%>', html_attr($row['id']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(id)%%>', urlencode($urow['id']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(type)%%>', safe_html($urow['type']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(type)%%>', html_attr($row['type']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(type)%%>', urlencode($urow['type']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(intervention)%%>', safe_html($urow['intervention']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(intervention)%%>', html_attr($row['intervention']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(intervention)%%>', urlencode($urow['intervention']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(site_compostage)%%>', safe_html($urow['site_compostage']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(site_compostage)%%>', html_attr($row['site_compostage']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(site_compostage)%%>', urlencode($urow['site_compostage']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(site_dechet)%%>', safe_html($urow['site_dechet']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(site_dechet)%%>', html_attr($row['site_dechet']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(site_dechet)%%>', urlencode($urow['site_dechet']), $templateCode);
		if($dvprint || (!$AllowUpdate && !$AllowInsert)){
			$templateCode = str_replace('<%%VALUE(desc)%%>', safe_html($urow['desc']), $templateCode);
		}else{
			$templateCode = str_replace('<%%VALUE(desc)%%>', html_attr($row['desc']), $templateCode);
		}
		$templateCode = str_replace('<%%URLVALUE(desc)%%>', urlencode($urow['desc']), $templateCode);
		$templateCode = str_replace('<%%VALUE(date_lancement)%%>', @date('d/m/Y', @strtotime(html_attr($row['date_lancement']))), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(date_lancement)%%>', urlencode(@date('d/m/Y', @strtotime(html_attr($urow['date_lancement'])))), $templateCode);
		$templateCode = str_replace('<%%VALUE(date_butoir)%%>', @date('d/m/Y', @strtotime(html_attr($row['date_butoir']))), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(date_butoir)%%>', urlencode(@date('d/m/Y', @strtotime(html_attr($urow['date_butoir'])))), $templateCode);
		$templateCode = str_replace('<%%VALUE(date_inter)%%>', @date('d/m/Y', @strtotime(html_attr($row['date_inter']))), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(date_inter)%%>', urlencode(@date('d/m/Y', @strtotime(html_attr($urow['date_inter'])))), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(intervenant)%%>', safe_html($urow['intervenant']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(intervenant)%%>', html_attr($row['intervenant']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(intervenant)%%>', urlencode($urow['intervenant']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(prix_unit)%%>', safe_html($urow['prix_unit']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(prix_unit)%%>', html_attr($row['prix_unit']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(prix_unit)%%>', urlencode($urow['prix_unit']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(niveau)%%>', safe_html($urow['niveau']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(niveau)%%>', html_attr($row['niveau']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(niveau)%%>', urlencode($urow['niveau']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(etat)%%>', safe_html($urow['etat']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(etat)%%>', html_attr($row['etat']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(etat)%%>', urlencode($urow['etat']), $templateCode);
	}else{
		$templateCode = str_replace('<%%VALUE(id)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(id)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(type)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(type)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(intervention)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(intervention)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(site_compostage)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(site_compostage)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(site_dechet)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(site_dechet)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(desc)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(desc)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(date_lancement)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(date_lancement)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(date_butoir)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(date_butoir)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(date_inter)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(date_inter)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(intervenant)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(intervenant)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(prix_unit)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(prix_unit)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(niveau)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(niveau)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(etat)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(etat)%%>', urlencode(''), $templateCode);
	}

	// process translations
	foreach($Translation as $symbol=>$trans){
		$templateCode = str_replace("<%%TRANSLATION($symbol)%%>", $trans, $templateCode);
	}

	// clear scrap
	$templateCode = str_replace('<%%', '<!-- ', $templateCode);
	$templateCode = str_replace('%%>', ' -->', $templateCode);

	// hide links to inaccessible tables
	if($_REQUEST['dvprint_x'] == ''){
		$templateCode .= "\n\n<script>\$j(function(){\n";
		$arrTables = getTableList();
		foreach($arrTables as $name => $caption){
			$templateCode .= "\t\$j('#{$name}_link').removeClass('hidden');\n";
			$templateCode .= "\t\$j('#xs_{$name}_link').removeClass('hidden');\n";
		}

		$templateCode .= $jsReadOnly;
		$templateCode .= $jsEditable;

		if(!$selected_id){
		}

		$templateCode.="\n});</script>\n";
	}

	// ajaxed auto-fill fields
	$templateCode .= '<script>';
	$templateCode .= '$j(function() {';


	$templateCode.="});";
	$templateCode.="</script>";
	$templateCode .= $lookups;

	// handle enforced parent values for read-only lookup fields

	// don't include blank images in lightbox gallery
	$templateCode = preg_replace('/blank.gif" data-lightbox=".*?"/', 'blank.gif"', $templateCode);

	// don't display empty email links
	$templateCode=preg_replace('/<a .*?href="mailto:".*?<\/a>/', '', $templateCode);

	/* default field values */
	$rdata = $jdata = get_defaults('Demande');
	if($selected_id){
		$jdata = get_joined_record('Demande', $selected_id);
		if($jdata === false) $jdata = get_defaults('Demande');
		$rdata = $row;
	}
	$templateCode .= loadView('Demande-ajax-cache', array('rdata' => $rdata, 'jdata' => $jdata));

	// hook: Demande_dv
	if(function_exists('Demande_dv')){
		$args=array();
		Demande_dv(($selected_id ? $selected_id : FALSE), getMemberInfo(), $templateCode, $args);
	}

	return $templateCode;
}
?>